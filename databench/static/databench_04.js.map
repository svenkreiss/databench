{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/main.js","js/ui.js"],"names":[],"mappings":"AAAA;;;;;ICAY;;;;;AAGZ,IAAI,cAAc,OAAO,WAAP,IAAsB,EAAtB;AAClB,YAAY,EAAZ,GAAiB,EAAjB;AACA,OAAO,WAAP,GAAqB,WAArB;;;;;;;;;;;;;ICJa;AACZ,UADY,GACZ,CAAY,IAAZ,EAAiD;;;MAA/B,8DAAM,kBAAyB;MAArB,sEAAc,qBAAO;;wBADrC,KACqC;;AAChD,OAAK,IAAL,GAAY,IAAZ,CADgD;AAEhD,OAAK,KAAL,GAAa,KAAb,CAFgD;AAGhD,OAAK,aAAL,GAAqB,aAArB,CAHgD;;AAKhD,OAAK,SAAL,GAAiB,EAAjB;;;AALgD,MAQ5C,qBAAqB,QAAQ,aAAR,CAArB,CAR4C;AAShD,UAAQ,aAAR,IAAyB,UAAC,OAAD,EAAa;AACrC,SAAK,GAAL,CAAS,OAAT,EAAkB,UAAlB,EADqC;AAErC,sBAAmB,KAAnB,CAAyB,OAAzB,EAAkC,CAAC,OAAD,CAAlC,EAFqC;GAAb,CATuB;EAAjD;;cADY;;2BAgBH;AACR,UAAM,KAAK,SAAL,CAAe,MAAf,GAAwB,KAAK,KAAL;AAAY,SAAK,SAAL,CAAe,KAAf;IAA1C;AADQ,OAIR,CAAK,IAAL,CAAU,SAAV,GAAsB,KAAK,SAAL,CAAe,GAAf,CAAmB,UAAC,CAAD;WAAO,EAAE,IAAF,CAAO,EAAP;IAAP,CAAnB,CAAsC,IAAtC,CAA2C,IAA3C,CAAtB,CAJQ;;;;sBAOL,SAA2B;OAAlB,+DAAO,yBAAW;;AAC9B,OAAI,OAAO,OAAP,IAAkB,QAAlB,EAA4B;AAC/B,cAAU,KAAK,SAAL,CAAe,OAAf,CAAV,CAD+B;IAAhC;;AAIA,QAAK,SAAL,CAAe,IAAf,CAAoB,CAAC,IAAI,MAAJ,CAAW,KAAK,GAAL,CAAS,CAAT,EAAY,IAAI,OAAO,MAAP,CAA3B,IAA6C,MAA7C,GAAsD,IAAtD,EAA4D,OAA7D,CAApB,EAL8B;AAM9B,QAAK,MAAL,GAN8B;;;;yBASwC;OAA3D,2DAAG,qBAAwD;OAAjD,+DAAO,yBAA0C;OAA/B,8DAAM,kBAAyB;OAArB,sEAAc,qBAAO;;AACtE,OAAI,OAAO,SAAS,cAAT,CAAwB,EAAxB,CAAP,CADkE;AAEtE,OAAI,QAAQ,IAAR,EAAc,OAAlB;;AAEA,WAAQ,GAAR,wBAAiC,cAAS,YAA1C,EAJsE;AAKtE,OAAI,IAAI,IAAI,GAAJ,CAAQ,IAAR,EAAc,KAAd,EAAqB,aAArB,CAAJ,CALkE;AAMtE,UAAO,UAAS,OAAT,EAAkB;AAAE,MAAE,GAAF,CAAM,OAAN,EAAe,MAAf,EAAF;IAAlB,CAN+D;;;;QAhC3D;;;AAwCZ","file":"databench_04.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import * as ui from './ui';\n\n// create a public interface\nvar Databench04 = window.Databench04 || {};\nDatabench04.ui = ui;\nwindow.Databench04 = Databench04;\n","\nexport class Log {\n\tconstructor(node, limit=20, consoleFnName='log') {\n\t\tthis.node = node;\n\t\tthis.limit = limit;\n\t\tthis.consoleFnName = consoleFnName;\n\n\t\tthis._messages = [];\n\n\t\t// capture events from frontend\n\t\tlet _consoleFnOriginal = console[consoleFnName];\n\t\tconsole[consoleFnName] = (message) => {\n\t\t\tthis.add(message, 'frontend');\n\t\t\t_consoleFnOriginal.apply(console, [message]);\n\t\t}\n\t}\n\n\trender() {\n\t\twhile(this._messages.length > this.limit) this._messages.shift();\n\n\t\t// for HTML output, json-stringify messages and join with <br>\n\t\tthis.node.innerText = this._messages.map((m) => m.join('')).join('\\n');\n\t}\n\n\tadd(message, source='unknown') {\n\t\tif (typeof message != \"string\") {\n\t\t\tmessage = JSON.stringify(message);\n\t\t}\n\n\t\tthis._messages.push([' '.repeat(Math.max(0, 8 - source.length)) + source + ': ', message]);\n\t\tthis.render();\n\t};\n\n\tstatic wire(id='log', source='backend', limit=20, consoleFnName='log') {\n\t\tlet node = document.getElementById(id);\n\t\tif (node == null) return;\n\n\t\tconsole.log(`Wiring element id=${id} to ${source}.`);\n\t\tlet l = new Log(node, limit, consoleFnName);\n\t\treturn function(message) { l.add(message, source); };\n\t}\n};\n"]}